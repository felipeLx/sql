Insert automatic values
# Transact-SQL provides two ways to do this. 
# You can use the IDENTITY property with a specific column in a table. 
# Or, you can define a SEQUENCE object and use values generated by that object.

# Any column with the IDENTITY property is automatically not nullable
CREATE TABLE Sales.Promotion
(
PromotionID int IDENTITY PRIMARY KEY,
PromotionName varchar(20),
StartDate datetime NOT NULL DEFAULT GETDATE(),
ProductModelID int NOT NULL REFERENCES Production.ProductModel(ProductModelID),
Discount decimal(4,2) NOT NULL,
Notes nvarchar(max) NULL
);


Copy
INSERT INTO Sales.Promotion
VALUES
('Clearance Sale', '01/01/2021', 23, 0.10, '10% discount')

# To return the most recently assigned IDENTITY, use the SCOPE_IDENTITY function;
SELECT SCOPE_IDENTITY();
SELECT IDENT_CURRENT('Sales.Promotion');

# SET IDENTITY INSERT table_name ON :
# override the automatically generated value and assign a specific value to the IDENTITY column
SET IDENTITY_INSERT SalesLT.Promotion ON;

INSERT INTO SalesLT.Promotion (PromotionID, PromotionName, ProductModelID, Discount)
VALUES
(20, 'Another short sale',37, 0.3);

SET IDENTITY_INSERT SalesLT.Promotion OFF;

# A sequence object is created using the CREATE SEQUENCE
CREATE SEQUENCE Sales.InvoiceNumber AS INT
START WITH 1000 INCREMENT BY 1;

INSERT INTO Sales.ResellerInvoice
VALUES
(NEXT VALUE FOR Sales.InvoiceNumber, 2, GETDATE(), 'PO12345', 107.99);

SELECT NEXT VALUE FOR dbo.Sequence OVER (ORDER BY Name) AS NextID,
    ProductID,
    Name
FROM Production.Product;



